<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="CCBot" content="nofollow">
  <meta name="author" content="Zevhys">
  <title>All Notes</title>
  <style>
    .notes-container {
      max-width: 400px;
      margin: auto;
    }

    textarea {
      resize: none !important;
      letter-spacing: 2px;
      height: 14em;
    }

    textarea:focus,
    input:focus,
    *:focus {
      outline: none !important;
    }

    .form-control:focus {
      border-color: inherit !important;
      -webkit-box-shadow: none !important;
      box-shadow: none !important;
    }

    .input-group.row {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    .warning-text::-ms-input-placeholder {
      color: red !important;
    }

    .warning-text::placeholder {
      color: red !important;
    }

    body {
      font: sans-serif;
    }
  </style>
  <style type="text/css">
    .add-new-container {
      position: sticky;
      top: 0;
      z-index: 696969420;
    }

    .add-new-container>a {
      backdrop-filter: blur(1em);
    }
  </style>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/all.min.css">
</head>

<body data-bs-theme="dark">
  <h1 class="text-center fs-2 mt-4">All Notes</h1>
  <div class="add-new-container text-center mb-4">
    <a href="/notes/add" class="btn btn-outline-secondary rounded-0" type="button">Add New Note</a>
  </div>

  <div class="notes-container">
    <% if (notes.length> 0) { %>
      <% notes.forEach(note=> { %>
        <div class="mb-4">
          <form action="/notes/<%= note._id %>?_method=PUT" class="updateForm" method="post" class="mt-2">
            <div class="input-group title-group">
              <input type="text" class="form-control rounded-0" aria-label="Title" aria-describedby="title"
                autocomplete="off" required value="<%= note.title %>" name="title">
              <button class="btn btn-secondary" type="submit">
                <i class="fa-solid fa-pen-to-square"></i>
              </button>
              <button class="btn-delete btn btn-outline-danger rounded-0" type="button" data-id="<%= note._id %>">
                <i class="fa-solid fa-trash"></i>
              </button>
            </div>
            <div class="input-group row">
              <span class="input-group-text rounded-0"></span>
              <textarea class="form-control rounded-0 content-input" aria-label="With textarea" name="content"
                minlength="10" maxlength="500" rows="4" cols="40" spellcheck="false" autocomplete="off"
                required><%= note.content %></textarea>
            </div>
          </form>
        </div>
        <% }); %>
          <% } else { %>
            <p class="text-center">No Notes Found.</p>
            <% } %>
  </div>

  <script>
    const titlePlaceholder = "Write Your Title Here...";
    const contentPlaceholder = "Write Your Message Here...";
    const titlePlaceholderWarn = "Title cannot contain only spaces!";
    const contentPlaceholderWarn = "Content cannot contain only spaces!";

    function isOnlySpaces(str) {
      return str.trim().length === 0;
    }

    function alertEmptyFunction(elem, placeholder, placeholderWarn) {
      let isValid = true;
      if (isOnlySpaces(elem.value)) {
        elem.value = "";
        elem.setAttribute("placeholder", placeholderWarn);
        elem.classList.add("warning-text");
        setTimeout(function () {
          elem.setAttribute("placeholder", placeholder);
          elem.classList.remove("warning-text");
        }, 3500);
        isValid = false;
      }
      return isValid;
    }

    document.addEventListener("DOMContentLoaded", () => {
      document.querySelectorAll('.updateForm').forEach(form => {
        const title = form.querySelector('input[name="title"]');
        const content = form.querySelector('textarea[name="content"]');
        title.setAttribute("placeholder", titlePlaceholder);
        content.setAttribute("placeholder", contentPlaceholder);

        form.addEventListener('submit', function (event) {
          let isValid = true;
          isValid = alertEmptyFunction(title, titlePlaceholder, titlePlaceholderWarn);
          isValid = alertEmptyFunction(content, contentPlaceholder, contentPlaceholderWarn);
          if (!isValid) {
            event.preventDefault();
          }
        });

        form.querySelector(".btn-delete").addEventListener('click', function () {
          const noteId = this.getAttribute('data-id');
          fetch(`/notes/${noteId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
          })
            .then(response => {
              window.location.href = '/notes';
            })
            .catch(error => {
              console.error('Error:', error);
            });
        });
      });
    });
  </script>
</body>

</html>